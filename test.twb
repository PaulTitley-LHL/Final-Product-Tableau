<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1112.0850                               -->
<workbook original-version='18.1' source-build='2024.3.1 (20243.24.1112.0850)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='AirBnB_NYC (airbnb)' inline='true' name='federated.0uwe0830p1net814xdl1r02rp4rk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airbnb' name='excel-direct.1r24pj71kjai1416ue07m0zinfwe'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/megam/Lighthouse Labs Compass Github Clones/Final-Product-Tableau/data/airbnb.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1r24pj71kjai1416ue07m0zinfwe' name='AirBnB_NYC' table='[AirBnB_NYC$]' type='table'>
          <columns gridOrigin='A1:M10001:no:A1:M10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='Host Id' ordinal='0' />
            <column datatype='date' name='Host Since' ordinal='1' />
            <column datatype='string' name='Name' ordinal='2' />
            <column datatype='string' name='Neighbourhood' ordinal='3' />
            <column datatype='string' name='Property Type' ordinal='4' />
            <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
            <column datatype='string' name='Room Type' ordinal='6' />
            <column datatype='integer' name='Zipcode' ordinal='7' />
            <column datatype='integer' name='Beds' ordinal='8' />
            <column datatype='integer' name='Number of Records' ordinal='9' />
            <column datatype='integer' name='Number Of Reviews' ordinal='10' />
            <column datatype='integer' name='Price' ordinal='11' />
            <column datatype='integer' name='Review Scores Rating' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[AirBnB_NYC]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M10001:no:A1:M10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Host Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Host Id]</local-name>
            <parent-name>[AirBnB_NYC]</parent-name>
            <remote-alias>Host Id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[AirBnB!NYC_2B9990C4CA70439C9F767BCA87DAE319]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Host Since</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Host Since]</local-name>
            <parent-name>[AirBnB_NYC]</parent-name>
            <remote-alias>Host Since</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[AirBnB!NYC_2B9990C4CA70439C9F767BCA87DAE319]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[AirBnB_NYC]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[AirBnB!NYC_2B9990C4CA70439C9F767BCA87DAE319]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neighbourhood</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Neighbourhood]</local-name>
            <parent-name>[AirBnB_NYC]</parent-name>
            <remote-alias>Neighbourhood</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[AirBnB!NYC_2B9990C4CA70439C9F767BCA87DAE319]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Property Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Property Type]</local-name>
            <parent-name>[AirBnB_NYC]</parent-name>
            <remote-alias>Property Type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[AirBnB!NYC_2B9990C4CA70439C9F767BCA87DAE319]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Review Scores Rating (bin)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Review Scores Rating (bin)]</local-name>
            <parent-name>[AirBnB_NYC]</parent-name>
            <remote-alias>Review Scores Rating (bin)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[AirBnB!NYC_2B9990C4CA70439C9F767BCA87DAE319]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Room Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Room Type]</local-name>
            <parent-name>[AirBnB_NYC]</parent-name>
            <remote-alias>Room Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[AirBnB!NYC_2B9990C4CA70439C9F767BCA87DAE319]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zipcode]</local-name>
            <parent-name>[AirBnB_NYC]</parent-name>
            <remote-alias>Zipcode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[AirBnB!NYC_2B9990C4CA70439C9F767BCA87DAE319]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Beds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Beds]</local-name>
            <parent-name>[AirBnB_NYC]</parent-name>
            <remote-alias>Beds</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[AirBnB!NYC_2B9990C4CA70439C9F767BCA87DAE319]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[AirBnB_NYC]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[AirBnB!NYC_2B9990C4CA70439C9F767BCA87DAE319]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number Of Reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number Of Reviews]</local-name>
            <parent-name>[AirBnB_NYC]</parent-name>
            <remote-alias>Number Of Reviews</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[AirBnB!NYC_2B9990C4CA70439C9F767BCA87DAE319]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Price]</local-name>
            <parent-name>[AirBnB_NYC]</parent-name>
            <remote-alias>Price</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[AirBnB!NYC_2B9990C4CA70439C9F767BCA87DAE319]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Review Scores Rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Review Scores Rating]</local-name>
            <parent-name>[AirBnB_NYC]</parent-name>
            <remote-alias>Review Scores Rating</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[AirBnB!NYC_2B9990C4CA70439C9F767BCA87DAE319]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[Calculation_1220475534979448832]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='&quot;United States&quot;' />
      </column>
      <column datatype='integer' name='[Host Id]' role='dimension' type='ordinal' />
      <column aggregate-role-from='[Zipcode]' datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
      <column datatype='string' name='[Property Type]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='AirBnB_NYC' datatype='table' name='[__tableau_internal_object_id__].[AirBnB!NYC_2B9990C4CA70439C9F767BCA87DAE319]' role='measure' type='quantitative' />
      <column-instance column='[Property Type]' derivation='None' name='[none:Property Type:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Country, Zipcode'>
          <field>[Calculation_1220475534979448832]</field>
          <field>[Zipcode]</field>
          <field>[Neighbourhood]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Property Type:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chalet&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bungalow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hut&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Condominium&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cabin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Treehouse&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Apartment&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tent&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Camper/RV&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lighthouse&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Loft&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Townhouse&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Villa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dorm&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Castle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bed &amp; Breakfast&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;House&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boat&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <filter class='categorical' column='[Zipcode]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Zipcode]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[Zipcode]' member='1003' />
            <groupfilter function='member' level='[Zipcode]' member='7030' />
            <groupfilter function='member' level='[Zipcode]' member='7105' />
            <groupfilter function='member' level='[Zipcode]' member='7712' />
            <groupfilter function='member' level='[Zipcode]' member='94103' />
            <groupfilter function='member' level='[Zipcode]' member='99135' />
          </groupfilter>
        </groupfilter>
      </filter>
      <object-graph>
        <objects>
          <object caption='AirBnB_NYC' id='AirBnB!NYC_2B9990C4CA70439C9F767BCA87DAE319'>
            <properties context=''>
              <relation connection='excel-direct.1r24pj71kjai1416ue07m0zinfwe' name='AirBnB_NYC' table='[AirBnB_NYC$]' type='table'>
                <columns gridOrigin='A1:M10001:no:A1:M10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Host Id' ordinal='0' />
                  <column datatype='date' name='Host Since' ordinal='1' />
                  <column datatype='string' name='Name' ordinal='2' />
                  <column datatype='string' name='Neighbourhood' ordinal='3' />
                  <column datatype='string' name='Property Type' ordinal='4' />
                  <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
                  <column datatype='string' name='Room Type' ordinal='6' />
                  <column datatype='integer' name='Zipcode' ordinal='7' />
                  <column datatype='integer' name='Beds' ordinal='8' />
                  <column datatype='integer' name='Number of Records' ordinal='9' />
                  <column datatype='integer' name='Number Of Reviews' ordinal='10' />
                  <column datatype='integer' name='Price' ordinal='11' />
                  <column datatype='integer' name='Review Scores Rating' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Account Date vs Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='AirBnB_NYC (airbnb)' name='federated.0uwe0830p1net814xdl1r02rp4rk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0uwe0830p1net814xdl1r02rp4rk'>
            <column datatype='date' name='[Host Since]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column-instance column='[Host Since]' derivation='Attribute' name='[attr:Host Since:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Price]' derivation='Attribute' name='[attr:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Host Since]' derivation='None' name='[none:Host Since:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0uwe0830p1net814xdl1r02rp4rk].[attr:Host Since:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[attr:Host Since:ok]' />
              <groupfilter function='member' level='[attr:Host Since:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0uwe0830p1net814xdl1r02rp4rk].[attr:Price:qk]' included-values='in-range'>
            <min>40</min>
          </filter>
          <slices>
            <column>[federated.0uwe0830p1net814xdl1r02rp4rk].[attr:Host Since:ok]</column>
            <column>[federated.0uwe0830p1net814xdl1r02rp4rk].[attr:Price:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1394' />
                <format attr='maxwidth' value='1394' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0uwe0830p1net814xdl1r02rp4rk].[attr:Price:qk]</rows>
        <cols>[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Host Since:qk]</cols>
      </table>
      <simple-id uuid='{D3798093-751D-430A-B4D9-6EEFC0C88F34}' />
    </worksheet>
    <worksheet name='Average Price of Property'>
      <table>
        <view>
          <datasources>
            <datasource caption='AirBnB_NYC (airbnb)' name='federated.0uwe0830p1net814xdl1r02rp4rk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0uwe0830p1net814xdl1r02rp4rk'>
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Property Type]' role='dimension' type='nominal' />
            <column-instance column='[Price]' derivation='Attribute' name='[attr:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Property Type]' derivation='None' name='[none:Property Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0uwe0830p1net814xdl1r02rp4rk].[attr:Price:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Property Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Property Type:nk]' />
              <groupfilter function='member' level='[none:Property Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0uwe0830p1net814xdl1r02rp4rk].[attr:Price:qk]</column>
            <column>[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Property Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0uwe0830p1net814xdl1r02rp4rk].[avg:Price:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0uwe0830p1net814xdl1r02rp4rk].[avg:Price:qk]' />
              <text column='[federated.0uwe0830p1net814xdl1r02rp4rk].[avg:Price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Property Type:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{07B04265-8872-4A37-883B-6A3665EBAA42}' />
    </worksheet>
    <worksheet name='Average Price vs Beds and Property Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='AirBnB_NYC (airbnb)' name='federated.0uwe0830p1net814xdl1r02rp4rk' />
          </datasources>
          <datasource-dependencies datasource='federated.0uwe0830p1net814xdl1r02rp4rk'>
            <column datatype='integer' name='[Beds]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Room Type]' role='dimension' type='nominal' />
            <column-instance column='[Beds]' derivation='Attribute' name='[attr:Beds:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price]' derivation='Count' name='[cnt:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Beds]' derivation='None' name='[none:Beds:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Room Type]' derivation='None' name='[none:Room Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0uwe0830p1net814xdl1r02rp4rk].[attr:Beds:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0uwe0830p1net814xdl1r02rp4rk].[attr:Beds:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0uwe0830p1net814xdl1r02rp4rk].[avg:Price:qk]' value='C1033%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0uwe0830p1net814xdl1r02rp4rk].[avg:Price:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0uwe0830p1net814xdl1r02rp4rk].[avg:Price:qk]' />
              <text column='[federated.0uwe0830p1net814xdl1r02rp4rk].[avg:Price:qk]' />
              <text column='[federated.0uwe0830p1net814xdl1r02rp4rk].[cnt:Price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Room Type:nk]</rows>
        <cols>[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Beds:qk]</cols>
      </table>
      <simple-id uuid='{39BA0F8A-6A36-4B0B-8E68-C40981E24E5C}' />
    </worksheet>
    <worksheet name='Average Price vs Property and Beds'>
      <table>
        <view>
          <datasources>
            <datasource caption='AirBnB_NYC (airbnb)' name='federated.0uwe0830p1net814xdl1r02rp4rk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0uwe0830p1net814xdl1r02rp4rk'>
            <column datatype='integer' name='[Beds]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Property Type]' role='dimension' type='nominal' />
            <column-instance column='[Price]' derivation='Attribute' name='[attr:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Beds]' derivation='Min' name='[min:Beds:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Beds]' derivation='None' name='[none:Beds:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Property Type]' derivation='None' name='[none:Property Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0uwe0830p1net814xdl1r02rp4rk].[attr:Price:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0uwe0830p1net814xdl1r02rp4rk].[min:Beds:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <filter class='categorical' column='[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Property Type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Property Type:nk]' />
              <groupfilter function='member' level='[none:Property Type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Property Type:nk]' direction='ASC' using='[federated.0uwe0830p1net814xdl1r02rp4rk].[avg:Price:qk]' />
          <slices>
            <column>[federated.0uwe0830p1net814xdl1r02rp4rk].[attr:Price:qk]</column>
            <column>[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Property Type:nk]</column>
            <column>[federated.0uwe0830p1net814xdl1r02rp4rk].[min:Beds:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0uwe0830p1net814xdl1r02rp4rk].[avg:Price:qk]' value='C1033%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Beds:qk]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0uwe0830p1net814xdl1r02rp4rk].[avg:Price:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0uwe0830p1net814xdl1r02rp4rk].[avg:Price:qk]' />
              <text column='[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Property Type:nk]' />
              <text column='[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Beds:qk]' />
              <text column='[federated.0uwe0830p1net814xdl1r02rp4rk].[avg:Price:qk]' />
              <color column='[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Property Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2F17D90D-9DD0-42C8-AC9E-D37616DF0EDC}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='AirBnB_NYC (airbnb)' name='federated.0uwe0830p1net814xdl1r02rp4rk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0uwe0830p1net814xdl1r02rp4rk'>
            <column caption='Country' datatype='string' name='[Calculation_1220475534979448832]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='&quot;United States&quot;' />
            </column>
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[Price]' derivation='Count' name='[cnt:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1220475534979448832]' derivation='None' name='[none:Calculation_1220475534979448832:nk]' pivot='key' type='nominal' />
            <column-instance column='[Zipcode]' derivation='None' name='[none:Zipcode:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0uwe0830p1net814xdl1r02rp4rk].[sum:Price:qk]' />
              <text column='[federated.0uwe0830p1net814xdl1r02rp4rk].[cnt:Price:qk]' />
              <lod column='[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Calculation_1220475534979448832:nk]' />
              <lod column='[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Zipcode:ok]' />
              <geometry column='[federated.0uwe0830p1net814xdl1r02rp4rk].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0uwe0830p1net814xdl1r02rp4rk].[Latitude (generated)]</rows>
        <cols>[federated.0uwe0830p1net814xdl1r02rp4rk].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1B8EF160-8E2D-4675-875D-A2899342AE87}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Account Date vs Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[attr:Host Since:ok]</field>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[avg:Price:qk]</field>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Host Since:qk]</field>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Neighbourhood:nk]</field>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Property Type:nk]</field>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Zipcode:ok]</field>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[yr:Host Since:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{79F022C9-4972-4144-A6D9-CCBDA444B2D2}' />
    </window>
    <window class='worksheet' name='Average Price of Property'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0uwe0830p1net814xdl1r02rp4rk].[avg:Price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[attr:Host Since:ok]</field>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[avg:Price:qk]</field>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Host Since:qk]</field>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Neighbourhood:nk]</field>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Property Type:nk]</field>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Zipcode:ok]</field>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[yr:Host Since:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E5F850E-4D49-41AD-88FB-68777FDA5A7C}' />
    </window>
    <window class='worksheet' name='Average Price vs Beds and Property Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0uwe0830p1net814xdl1r02rp4rk].[avg:Price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Beds:qk]</field>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Room Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1E5C55C0-A3A2-4103-9EDC-BBFB4E034C36}' />
    </window>
    <window class='worksheet' name='Average Price vs Property and Beds'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Property Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[attr:Host Since:ok]</field>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Beds:qk]</field>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Host Since:qk]</field>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Neighbourhood:nk]</field>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Property Type:nk]</field>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[none:Zipcode:ok]</field>
            <field>[federated.0uwe0830p1net814xdl1r02rp4rk].[yr:Host Since:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{94909FCE-A64E-4736-8D77-43D07F3CF9DE}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0uwe0830p1net814xdl1r02rp4rk].[sum:Price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{16A895B4-4089-4047-B542-0DA8484E5442}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Account Date vs Price' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Price of Property' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Price vs Beds and Property Type' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Average Price vs Property and Beds' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
